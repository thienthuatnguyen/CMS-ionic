{"version":3,"sources":["../../../src/@ionic-native/plugins/autostart/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C;;;;;;;;;;;;;;;;;;;;GAoBG;AASH;IAA+B,6BAAiB;IAAhD;;IAoBA,CAAC;IAlBC;;OAEG;IAEH,0BAAM,GAAN,cAAiB,CAAC;IAElB;;OAEG;IAEH,2BAAO,GAAP,cAAkB,CAAC;IAEd,oBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAbA;QADC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;2CACN;IAMlB;QADC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;4CACL;IAZR,SAAS;QARrB,MAAM,CAAC;YACN,UAAU,EAAE,WAAW;YACvB,MAAM,EAAE,0BAA0B;YAClC,SAAS,EAAE,2BAA2B;YACtC,IAAI,EAAE,uDAAuD;YAC7D,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,SAAS,CAoBrB;IAAD,gBAAC;CApBD,AAoBC,CApB8B,iBAAiB,GAoB/C;SApBY,SAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @name Autostart\n * @description\n * This plugin automatically starts your Android app after every boot or auto-update.\n * You can enable or disable the autostart function in your app.\n *\n * @usage\n * ```typescript\n * import { Autostart } from '@ionic-native/autostart';\n *\n *\n * constructor(private autostart: Autostart) { }\n *\n * ...\n *\n * this.autostart.enable();\n *\n * this.autostart.disable();\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Autostart',\n  plugin: 'cordova-plugin-autostart',\n  pluginRef: 'cordova.plugins.autoStart',\n  repo: 'https://github.com/ToniKorin/cordova-plugin-autostart',\n  platforms: ['Android']\n})\n\nexport class Autostart extends IonicNativePlugin {\n\n  /**\n   * Enable the automatic startup after the boot\n   */\n  @Cordova({ sync: true })\n  enable(): void { }\n\n  /**\n   * Disable the automatic startup after the boot\n   */\n  @Cordova({ sync: true })\n  disable(): void { }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}