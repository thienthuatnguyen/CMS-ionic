import { Injectable, NgModule } from '@angular/core';
import { APICode, IvtHttpClientModule } from '@ivt/http-client';
import 'rxjs/add/operator/map';
import { HttpClient, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
import { catchError } from 'rxjs/operators';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var IvtSecurityConfig = /** @class */ (function () {
    function IvtSecurityConfig() {
        this.apiUrl = '';
        this.rememberLogin = false;
    }
    /**
     * @param {?} response
     * @return {?}
     */
    IvtSecurityConfig.prototype.onUnAuthorized = /**
     * @param {?} response
     * @return {?}
     */
    function (response) {
    };
    IvtSecurityConfig.decorators = [
        { type: Injectable },
    ];
    return IvtSecurityConfig;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var IvtStorageService = /** @class */ (function () {
    function IvtStorageService() {
    }
    /**
     * @param {?} key
     * @param {?} val
     * @return {?}
     */
    IvtStorageService.prototype.save = /**
     * @param {?} key
     * @param {?} val
     * @return {?}
     */
    function (key, val) {
        if (val !== null && typeof val === 'object') {
            localStorage.setItem(key + '_type', 'object');
            val = JSON.stringify(val);
        }
        localStorage.setItem(key, val);
    };
    /**
     * @param {?} key
     * @return {?}
     */
    IvtStorageService.prototype.get = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        var /** @type {?} */ val = localStorage.getItem(key) || sessionStorage.getItem(key);
        var /** @type {?} */ valType = localStorage.getItem(key + '_type') || sessionStorage.getItem(key + '_type');
        if (valType === 'object') {
            return JSON.parse(val);
        }
        else if (val === 'null') {
            return null;
        }
        else {
            return val;
        }
    };
    /**
     * @param {?} key
     * @return {?}
     */
    IvtStorageService.prototype.remove = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        localStorage.removeItem(key);
        localStorage.removeItem(key + '_type');
    };
    IvtStorageService.decorators = [
        { type: Injectable },
    ];
    return IvtStorageService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
// unsupported: template constraints.
/**
 * @template T
 */
var  
// unsupported: template constraints.
/**
 * @template T
 */
IvtSecurityAbstractService = /** @class */ (function () {
    function IvtSecurityAbstractService(http, db, config) {
        this.http = http;
        this.db = db;
        this.config = config;
        this.loadUserCredentials();
    }
    /**
     * @return {?}
     */
    IvtSecurityAbstractService.prototype.loadUserCredentials = /**
     * @return {?}
     */
    function () {
        this.useCredentials(this.db.get('user'));
    };
    /**
     * @param {?} user
     * @return {?}
     */
    IvtSecurityAbstractService.prototype.useCredentials = /**
     * @param {?} user
     * @return {?}
     */
    function (user) {
        if (user) {
            this.user = user;
        }
    };
    /**
     * @return {?}
     */
    IvtSecurityAbstractService.prototype.destroyUserCredentials = /**
     * @return {?}
     */
    function () {
        this.db.remove('user');
        this.user = null;
    };
    /**
     * @param {?} user
     * @return {?}
     */
    IvtSecurityAbstractService.prototype.storeUserCredentials = /**
     * @param {?} user
     * @return {?}
     */
    function (user) {
        if (this.config.rememberLogin === true) {
            this.db.save('user', user);
        }
        this.useCredentials(user);
    };
    /**
     * @param {?} res
     * @return {?}
     */
    IvtSecurityAbstractService.prototype.afterLogin = /**
     * @param {?} res
     * @return {?}
     */
    function (res) {
        if (res.code === APICode.Success) {
            this.storeUserCredentials(res.data);
        }
    };
    /**
     * @param {?} loginModel
     * @return {?}
     */
    IvtSecurityAbstractService.prototype.login = /**
     * @param {?} loginModel
     * @return {?}
     */
    function (loginModel) {
        var _this = this;
        return this.http.post(this.config.apiUrl, loginModel, { params: { auth: 'false' } })
            .map(function (res) {
            var /** @type {?} */ response = /** @type {?} */ ((res));
            _this.afterLogin(response);
            return response;
        });
    };
    /**
     * @return {?}
     */
    IvtSecurityAbstractService.prototype.logout = /**
     * @return {?}
     */
    function () {
        // TODO
        this.destroyUserCredentials();
    };
    /**
     * @return {?}
     */
    IvtSecurityAbstractService.prototype.getUser = /**
     * @return {?}
     */
    function () {
        return this.user;
    };
    /**
     * @return {?}
     */
    IvtSecurityAbstractService.prototype.isAuthenticated = /**
     * @return {?}
     */
    function () {
        return this.user && this.user.token;
    };
    return IvtSecurityAbstractService;
}());

var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var IvtSecurityService = /** @class */ (function (_super) {
    __extends(IvtSecurityService, _super);
    function IvtSecurityService(http, db, config) {
        var _this = _super.call(this, http, db, config) || this;
        _this.http = http;
        _this.db = db;
        _this.config = config;
        return _this;
    }
    IvtSecurityService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    IvtSecurityService.ctorParameters = function () { return [
        { type: HttpClient, },
        { type: IvtStorageService, },
        { type: IvtSecurityConfig, },
    ]; };
    return IvtSecurityService;
}(IvtSecurityAbstractService));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var IvtSecurityInterceptor = /** @class */ (function () {
    function IvtSecurityInterceptor(config) {
        this.config = config;
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    IvtSecurityInterceptor.prototype.intercept = /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    function (req, next) {
        var _this = this;
        return next.handle(req).pipe(catchError(function (err) {
            if (err instanceof HttpErrorResponse) {
                if (err.status === 401) {
                    _this.config.onUnAuthorized(err);
                }
            }
            return Observable.throw(err);
        }));
    };
    IvtSecurityInterceptor.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    IvtSecurityInterceptor.ctorParameters = function () { return [
        { type: IvtSecurityConfig, },
    ]; };
    return IvtSecurityInterceptor;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var Tenant = /** @class */ (function () {
    function Tenant() {
    }
    return Tenant;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var User = /** @class */ (function () {
    function User() {
    }
    return User;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var IvtSecurityModule = /** @class */ (function () {
    function IvtSecurityModule() {
    }
    /**
     * @return {?}
     */
    IvtSecurityModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: IvtSecurityModule,
            providers: [
                IvtSecurityConfig,
                IvtSecurityService,
                IvtStorageService,
                { provide: HTTP_INTERCEPTORS, useClass: IvtSecurityInterceptor, multi: true }
            ]
        };
    };
    IvtSecurityModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        IvtHttpClientModule
                    ],
                    exports: [],
                    declarations: []
                },] },
    ];
    return IvtSecurityModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { IvtSecurityConfig, IvtSecurityService, IvtStorageService, Tenant, User, IvtSecurityAbstractService, IvtSecurityInterceptor, IvtSecurityModule };
//# sourceMappingURL=security.es5.js.map
