{"version":3,"file":"http-client.js","sources":["../../tmp/module/config.ts","../../tmp/module/service/interceptor.ts","../../tmp/module/constant/api.code.ts","../../tmp/module/constant/error.level.ts","../../tmp/module/model/api.response.ts","../../tmp/module/service/base.service.ts","../../tmp/module/lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { APIResponse } from './model/api.response';\nimport { HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class IvtHttpClientConfig {\n\n    /**\n     *\n     * @param request\n     * Transform request before invoking API\n     */\n    transformRequestBody(request: HttpRequest<any>): any {\n        return null;\n    }\n    /**\n     *\n     * @param response\n     * Transform response from API\n     */\n    transformResponseBody(response: HttpResponse<any> | HttpErrorResponse): APIResponse {\n        return null;\n    }\n    /**\n     * Provide Authorization Header\n     */\n    getAuthorizationHeader(): string {\n        throw new Error('Not Implemented');\n    }\n}\n","import { Observable } from 'rxjs/Observable';\nimport {\n    HttpInterceptor, HttpRequest, HttpHandler,\n    HttpSentEvent, HttpHeaderResponse, HttpProgressEvent,\n    HttpResponse, HttpUserEvent\n} from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { IvtHttpClientConfig } from '../config';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class IvtHttpInterceptor implements HttpInterceptor {\n\n    constructor(private config: IvtHttpClientConfig) {\n    }\n    intercept(req: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\n        let clonedReq: any = null;\n        if (req.params.get('auth') !== 'false') {\n            clonedReq = clonedReq || {};\n            clonedReq.headers = req.headers.set('Authorization', this.config.getAuthorizationHeader());\n        }\n        if (req.method === 'POST') {\n            const transformedBody = this.config.transformRequestBody(req);\n            if (transformedBody != null) {\n                clonedReq = clonedReq || {};\n                clonedReq.body = transformedBody;\n            } else {\n                console.log('[IvtHttpInterceptor] transformRequest() is null, request body is not transformed');\n            }\n        }\n        if (clonedReq != null) {\n            req = req.clone(clonedReq);\n        }\n        return next.handle(req).pipe(map(response => {\n            if (response instanceof HttpResponse) {\n                const transformedBody = this.config.transformResponseBody(response);\n                if (transformedBody != null) {\n                    response = response.clone({\n                        body: transformedBody\n                    })\n                } else {\n                    console.log('[IvtHttpInterceptor] transformResponse() is null, response body is not transformed');\n                }\n            }\n            return response;\n        }))\n    }\n\n}\n","export class APICode {\n    static ClientError = 'ClientError';\n    static Progress = 'Progress';\n    static Success = '1';\n    static TokenInvalid = '401';\n    static ParameterMissing = '-400';\n    static InternalServerError = '-500';\n    static FailedToCreateAppointment = '-510';\n    static NoAppointmentFound = '-511';\n    static FailedToCreateRepairOrder = '-600';\n    static FailedToCreateRepairOrderDueToOpenRepairOrderAlreadyExist = '-601';\n    static FailedToUpdateRepairOrder = '-620';\n    static CannotIssueRODueToAlreadyIssued = '-630';\n    static CannotCompleteServiceDueToAlreadyCompleted = '-640';\n    static FailedToCompleteService = -641;\n    static CannotCancelRepairOrderDueToAlreadyCanceled = '-642';\n    static CannotCancelRepairOrderDueToAlreadyCompleted = '-643';\n    static CannotCheckInDueToNonAppointment = '-644';\n    static CannotIssueDueToNonPreRO = '-650';\n    static NotAllowedFileFormat = '-730';\n    static NoChecklistFound = '-900';\n    static FailedToSaveChecklist = '-901';\n    static FailedToSendMessage = '-1000';\n    static FailedToCreateScheduleItem = '-1100';\n    static OrganizationNotFound = '-1200';\n    static UserNotFound = '-1201';\n    static QLTokenWrong = '-1202';\n    static QLTokenExpired = '-1203';\n    static DealerPushServerSettingMissing = '-1204';\n    static Undefined = '-99999';\n    static Timeout = '-90000';\n    static CannotConnectToServer = '-90001';\n    static KickedOut = 'HOST_COMMON_6000'\n }\n","export class ErrorLevel {\n    static Critical = 'critical';\n    static Normal = 'normal';\n}\n","export class APIResponse {\n    /**\n     * APICode\n     */\n    public code: string;\n    public message: string;\n    public data: any;\n    public meta: any;\n    public event: Event;\n    public recommendedAction: string;\n    public ex: any;\n}\n\n","import { plainToClass } from 'class-transformer';\nimport { Observable } from 'rxjs/Observable';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/observable/throw';\nimport { APIResponse } from '../model/api.response';\nimport { APICode } from '../constant/api.code';\nimport { IvtHttpClientConfig } from '../config';\n\nexport class IvtHttpService<T> {\n\n    constructor(\n        public httpClient: HttpClient,\n        protected url: string,\n        private ClazzType: Type<T>,\n        private config: IvtHttpClientConfig) {\n    }\n\n    public extractData(res: APIResponse): T | T[] {\n        const response = <APIResponse>(res);\n        if (response.code === APICode.Success) {\n            if (response.data instanceof Array) {\n                return plainToClass<T, T[]>(this.ClazzType, response.data);\n            } else {\n                return plainToClass<T, T>(this.ClazzType, response.data);\n            }\n        }\n        throw response;\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        let response = new APIResponse();\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error('[ServicesBase]: An error occurred:', error.error.message);\n            response.code = APICode.ClientError;\n            response.message = error.error.message;\n        } else if (error instanceof APIResponse) {\n            return Observable.throw(error);\n        } else if (error instanceof Error) {\n            response.code = APICode.ClientError;\n            response.message = error.message;\n        } else if (error.error instanceof ProgressEvent) {\n            response.code = APICode.Progress;\n            response.event = error.error;\n        } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            const transformedResponse = this.config.transformResponseBody(error);\n            if (transformedResponse) {\n                response = transformedResponse;\n            } else {\n                // transformResponse is not implemented\n                response = error.error;\n            }\n            response.code = error.status.toString();\n            console.error(\n                `[ServicesBase]: Backend returned code ${response.code}, ` +\n                `body was: ${response.message}`);\n        }\n        return Observable.throw(response);\n    };\n\n    getAll(parentId?: string): Observable<T[]> {\n        return this.httpClient.get<APIResponse>(this.url + (parentId ? `/${parentId}` : ''))\n            .pipe(map(res => this.extractData(res)))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    get(id: string): Observable<T> {\n        return this.httpClient.get<APIResponse>(this.url + (id ? `/${id}` : ''))\n            .pipe(map(res => this.extractData(res)))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    // create or update\n    save(item: any): Observable<T> {\n        return this.httpClient.post<APIResponse>(this.url, item)\n            .pipe(map(res => this.extractData(res)))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    search(criteria?: any): Observable<T[]> {\n        return this.httpClient.post<APIResponse>(this.url, criteria)\n            .pipe(map(res => this.extractData(res)))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    delete(id: string): Observable<any> {\n        return this.httpClient.delete<APIResponse>(this.url + (id ? `/${id}` : ''))\n            .pipe(map(res => this.extractData(res)))\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n}\n\n// tslint:disable-next-line:interface-over-type-literal\nexport declare type Type<T> = {\n    new(...args: any[]): T;\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { IvtHttpInterceptor } from './service/interceptor';\nimport { IvtHttpClientConfig } from './config';\nimport { APICode } from './constant/api.code';\nimport { APIResponse } from './model/api.response';\nimport { ErrorLevel } from './constant/error.level';\nimport { IvtHttpService } from './service/base.service';\n// Export module's public API\n\nexport { APICode } from './constant/api.code';\nexport { ErrorLevel } from './constant/error.level';\nexport { APIResponse } from './model/api.response';\nexport { IvtHttpInterceptor } from './service/interceptor';\nexport { IvtHttpClientConfig } from './config';\nexport { IvtHttpService } from './service/base.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ]\n})\nexport class IvtHttpClientModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: IvtHttpClientModule,\n      providers: [\n        IvtHttpClientConfig,\n        { provide: HTTP_INTERCEPTORS, useClass: IvtHttpInterceptor, multi: true }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}