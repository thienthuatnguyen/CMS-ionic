import { Observable } from 'rxjs/Observable';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { ErrorObservable } from 'rxjs/observable/ErrorObservable';
import 'rxjs/add/observable/throw';
import { APIResponse } from '../model/api.response';
import { IvtHttpClientConfig } from '../config';
export declare class IvtHttpService<T> {
    httpClient: HttpClient;
    protected url: string;
    private ClazzType;
    private config;
    constructor(httpClient: HttpClient, url: string, ClazzType: Type<T>, config: IvtHttpClientConfig);
    extractData(res: APIResponse): T | T[];
    protected handleError(error: HttpErrorResponse): ErrorObservable;
    getAll(parentId?: string): Observable<T[]>;
    get(id: string): Observable<T>;
    save(item: any): Observable<T>;
    search(criteria?: any): Observable<T[]>;
    delete(id: string): Observable<any>;
}
export declare type Type<T> = {
    new (...args: any[]): T;
};
