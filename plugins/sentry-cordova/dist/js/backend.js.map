{"version":3,"file":"backend.js","sourceRoot":"","sources":["../../src/js/backend.ts"],"names":[],"mappings":"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","sourcesContent":["import { Breadcrumb, Context, SentryEvent } from '@sentry/shim';\nimport { Backend, Frontend } from '@sentry/core';\nimport { BrowserBackend, BrowserOptions } from '@sentry/browser';\n\nimport { normalizeData } from './normalize';\n\nconst PLUGIN_NAME = 'Sentry';\n\ndeclare var window: any;\ndeclare var document: any;\n\n/**\n * Configuration options for the Sentry Cordova SDK.\n * @see CordovaFrontend for more information.\n */\nexport interface CordovaOptions extends BrowserOptions {\n  autoBreadcrumbs?: boolean;\n  instrument?: boolean;\n}\n\n/** The Sentry Cordova SDK Backend. */\nexport class CordovaBackend implements Backend {\n  /** Handle to the SDK frontend for callbacks. */\n  private readonly frontend: Frontend<CordovaOptions>;\n\n  private browserBackend: BrowserBackend;\n\n  private deviceReadyCallback: any;\n\n  /** Creates a new cordova backend instance. */\n  public constructor(frontend: Frontend<CordovaOptions>) {\n    this.frontend = frontend;\n    this.browserBackend = new BrowserBackend(this.frontend);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public install(): boolean {\n    this.browserBackend.install();\n\n    if (this.isCordova()) {\n      this.deviceReadyCallback = () => this.runNativeInstall();\n      document.addEventListener('deviceready', this.deviceReadyCallback);\n    }\n\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async eventFromException(exception: any): Promise<SentryEvent> {\n    return this.browserBackend.eventFromException(exception);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async eventFromMessage(message: string): Promise<SentryEvent> {\n    return this.browserBackend.eventFromMessage(message);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async sendEvent(event: SentryEvent): Promise<number> {\n    const mergedEvent = {\n      ...normalizeData(event),\n    };\n    return this.nativeCall('sendEvent', mergedEvent);\n  }\n\n  // CORDOVA --------------------\n  public nativeCall(action: string, ...args: any[]): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const exec =\n        window && (window as any).Cordova && (window as any).Cordova.exec;\n      if (!exec) {\n        reject('Cordova.exec not available');\n      } else {\n        (window as any).Cordova.exec(\n          resolve,\n          reject,\n          PLUGIN_NAME,\n          action,\n          args,\n        );\n      }\n    }).catch(e => {\n      if (\n        (e === 'not implemented' || e === 'Cordova.exec not available') &&\n        (this.browserBackend as any)[action]\n      ) {\n        // This is our fallback to the browser implementation\n        return (this.browserBackend as any)[action](...args);\n      } else {\n        // TODO log error on unpatched console\n      }\n    });\n  }\n\n  private runNativeInstall(): void {\n    document.removeEventListener('deviceready', this.deviceReadyCallback);\n    if (this.frontend.getDSN()) {\n      this.nativeCall(\n        'install',\n        this.frontend.getDSN()!.toString(true),\n        this.frontend.getOptions(),\n      );\n    }\n  }\n\n  private isCordova(): boolean {\n    return window.cordova !== undefined || window.Cordova !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public storeBreadcrumb(breadcrumb: Breadcrumb): boolean {\n    this.nativeCall('addBreadcrumb', breadcrumb);\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public storeContext(context: Context): boolean {\n    if (context.extra) {\n      this.nativeCall('setExtraContext', context.extra);\n    }\n    if (context.tags) {\n      this.nativeCall('setTagsContext', context.tags);\n    }\n    if (context.user) {\n      this.nativeCall('setUserContext', context.user);\n    }\n    return true;\n  }\n}\n"]}