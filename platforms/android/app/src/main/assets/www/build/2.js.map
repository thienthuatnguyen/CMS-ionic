{"version":3,"sources":["../../src/pages/test-drive-result/test-drive-result.module.ts","../../src/pipes/pipes.module.ts","../../src/pipes/hours-minutes-seconds/hours-minutes-seconds.ts","../../src/pipes/time-duration/time-duration.ts","../../src/pages/test-drive-result/test-drive-result.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TestDriveResultPage } from './test-drive-result';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {PipesModule} from \"../../pipes/pipes.module\";\n\n@NgModule({\n  declarations: [\n    TestDriveResultPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TestDriveResultPage),\n    TranslateModule.forChild(),\n    PipesModule\n  ],\n})\nexport class TestDriveResultPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/test-drive-result/test-drive-result.module.ts","import { NgModule } from '@angular/core';\nimport { HoursMinutesSeconds } from './hours-minutes-seconds/hours-minutes-seconds';\nimport { TimeDuration } from './time-duration/time-duration';\n@NgModule({\n\tdeclarations: [HoursMinutesSeconds, TimeDuration\n    ],\n\timports: [],\n\texports: [HoursMinutesSeconds, TimeDuration\n    ]\n})\nexport class PipesModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/pipes.module.ts","import {Injectable, Pipe, PipeTransform} from '@angular/core';\n//import * as _moment from 'moment';\nimport * as moment from 'moment';\n\n// const Moment = _moment;\n/**\n * Generated class for the HoursMinutesSecondsPipe pipe.\n *\n * See https://angular.io/api/core/Pipe for more info on Angular Pipes.\n */\n@Pipe({\n  name: 'hoursMinutesSeconds',\n})\nexport class HoursMinutesSeconds implements PipeTransform {\n  /**\n   * Takes a value and makes it lowercase.\n   */\n\n  transform(value, args?) {\n\n    // let sec_num = parseInt(value, 10);\n    let momentDateString = moment((parseInt(value)*1000)).utcOffset(0).format('HH:mm:ss')\n\n    // momentDateString =(parseInt(value)*1000)\n\n\n\n    // let momentDateString = moment(new Date(sec_num)).format('hh:mm:ss')\n    return momentDateString;\n  }\n    /*if (hours != 0) {\n      time = hours+\":\";\n    }\n    if (minutes != 0 || time !== \"\") {npm\n      minutes = (minutes < 10 && time !== \"\") ? \"0\"+minutes : String(minutes);\n      time += minutes+\":\";\n    }\n    if (time === \"\") {\n      time = seconds+\"s\";\n    }\n    else {\n      time += (seconds < 10) ? \"0\"+seconds : String(seconds);\n    }\n    return time;\n  }*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/hours-minutes-seconds/hours-minutes-seconds.ts","import {Pipe, PipeTransform} from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'timeDuration',\n})\nexport class TimeDuration implements PipeTransform {\n  transform(value, args?) {\n    const day = 60 * 60;\n    let timeDuration = '';\n\n    if(value > day) {\n        timeDuration = Math.floor(value / day) + 'D+';\n    }\n    else {\n      let time = moment((parseInt(value)*1000)).utcOffset(0);\n      timeDuration = time.format('H') + 'H ' + time.format('mm') + 'M';\n    }\n    \n    return timeDuration;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/time-duration/time-duration.ts","import { Component } from '@angular/core';\nimport { AlertController, IonicPage, LoadingController, NavController, NavParams, ModalController } from 'ionic-angular';\nimport { TestDriveProvider } from \"../../providers/test-drive/test-drive\";\nimport { Geolocation } from \"@ionic-native/geolocation\";\nimport { Observable } from \"rxjs/Observable\";\nimport { SurveyDetailPage } from \"../cs-survey/survey-detail/survey.detail.component\";\nimport { APICode, APIResponse } from \"@ivt/http-client\";\nimport { Util } from \"../../providers\";\nimport * as moment from 'moment';\nimport { ToastService } from '../../services/toast.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DrivingRecordService } from '../../services/driving.record.service';\nimport { Customer } from '../../models/customer.model';\nimport { LoadingService } from '../../services/loading.service';\nimport { Config } from '../../app/app.config';\nimport { AppSettingModel } from '../../models/config/app.setting.model';\nimport { IvtStorageService } from '@ivt/security';\nimport { VehicleOdometerModel } from '../../models/VehicleOdometer.model';\nimport { CameraService } from '../../services/camera.service';\nimport { FileService } from '../../services/file.service';\nimport { VehicleOdometerService } from '../../services/vehicle.odometer.service';\nimport { DriveShootingPage } from '../../pages/drive-shooting/drive-shooting';\nimport { BluetoothService } from '../../services/bluetooth.service';\n\n/**\n * Generated class for the TestDriveResultPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-test-drive-result',\n  templateUrl: 'test-drive-result.html',\n})\nexport class TestDriveResultPage {\n  private appSetting: AppSettingModel;\n  availableGpsString: any;\n  item: any;\n  applicationId: any;\n  latlng: any;\n  uploadDrivingRecord: any;\n  recordId: any;\n  startAddress: any;\n  callback: any;\n  totalRecordTime: any;\n  totalRecordDistance: any;\n  recordTime: any;\n  recordDistance: any;\n  endLocation: any;\n  location: any;\n  firstDate: any;\n  secondDate: any;\n  drivenMileage: any;\n  drivenDurationInSec: moment.Duration;\n  displayDrivenDurationInSec: string;\n  loading: any\n  drivingRecord: any;\n\n  previousRecord: any;\n\n\n  // previousRecordItems: Array<{drivenStartTime: any, drivenDurationInSec: any, drivenMileage: any, endFullAddress?: any, startFullAddress: any, endLatitude?: any, endLongitude?: any, recordId: any}>\n  previousRecordItems: any;\n  totalDrivingTime: any = 0;\n  totalDrivenMileage: number = 0;\n  displayTotalDrivenMileage: number = 0;\n  displayTotalDrivingTime: any = 0;\n  displayDateFormat = Config.date.displayFormatDateSurvey;\n\n  private tabElement: any;\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private alertCtrl: AlertController,\n    private testDriveProvider: TestDriveProvider,\n    private geolocation: Geolocation,\n    private loadingCtrl: LoadingController,\n    private util: Util,\n    private toastSvr: ToastService,\n    private translate: TranslateService,\n    private drivingSvc: DrivingRecordService,\n    private loadingSvc: LoadingService,\n    private storeage: IvtStorageService,\n    private modalCtrl: ModalController,\n    private camera: CameraService,\n    private fileSvc: FileService,\n    private vehicleOdometerService: VehicleOdometerService,\n    private bluetoothSvc: BluetoothService\n  ) {\n    this.tabElement = document.querySelector('.tabbar')\n    this.displayTab('none');\n    this.item = navParams.get('item')\n    this.applicationId = navParams.get('applicationId')\n    this.drivenDurationInSec = navParams.get('drivenDurationInSec') as moment.Duration;\n    this.displayDrivenDurationInSec = this.drivenDurationInSec.format('HH:mm:ss', {\n      trim: false\n    });\n\n    this.drivenMileage = navParams.get('drivenMileage')\n\n    this.callback = this.navParams.get('callback');\n\n    this.previousRecordItems = [];\n\n\n    console.log(\"record로 부터 받아온 item 파라미터값: \", this.item)\n\n    this.translate.get('msg.available_gps').subscribe((value) => {\n      this.availableGpsString = value;\n    });\n\n    this.getAppSetting();\n  }\n\n  private getAppSetting() {\n    this.appSetting = this.storeage.get(Config.AppSetting);\n  }\n\n  private displayTab(display: string) {\n    if (this.tabElement && this.tabElement.style)\n      this.tabElement.style.display = display;\n  }\n  ionViewWillEnter() {\n    this.displayTab('none');\n  }\n  ionViewWillLeave() {\n    this.displayTab('flex');\n    this.bluetoothSvc.disconnect();\n  }\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad TestDriveResultPage');\n    this.loading = this.loadingCtrl.create()\n    this.getDrivingRecords()\n\n    // this.requestGeolocation()\n\n  }\n\n  finishTestDrive() {\n    // if(this.appSetting.smartTestDriveSetting.tenantSide.performTakingOdometerPhotoBeforeAndAfterTestDrive) {\n    //   let profileModal = this.modalCtrl.create(DriveShootingPage, {\n    //     pageType: 'odometer',\n    //     page: 'reservation-list'\n    //   });\n\n    //   profileModal.onDidDismiss(data => {\n    //     this.camera.getPicture().then(\n    //       _base64 => {      \n    //         this.fileSvc.upload(_base64, { fileName: this.generateUniqueFileName() }).then(\n    //           _id => {\n    //             let vehicleOdometerModel = new VehicleOdometerModel();\n    //             vehicleOdometerModel.applicationId = this.applicationId;\n    //             vehicleOdometerModel.odometerPictureId = _id;\n\n    //             this.vehicleOdometerService.save(vehicleOdometerModel).subscribe(() => {\n    //               this.moveSurvey();\n    //             })\n    //           }    \n    //         )\n    //       }\n    //     )\n    //   });\n    //   profileModal.present();\n    // }\n    // else {\n    this.moveSurvey();\n    // }\n  }\n\n  moveSurvey() {\n    //운행 기록 종료 버튼 탭\n    this.finishDrivingRecord()\n    /*\n        let confirm = this.alertCtrl.create({\n    //TODO translate처리. 메시지 텍스트 부분\n          title: 'Thanks.',\n          buttons: [\n            {\n              text: 'Go to Survey',\n              handler: () => {\n\n\n\n                let data = {\n                  data: surveyItem\n\n                }\n\n              }\n            }\n          ]\n        });\n        confirm.present();*/\n  }\n\n\n\n  async finishDrivingRecord() {\n    console.log(\"finishDrivingRecord running...\");\n    const loader = await this.loadingSvc.create('msg.finishing_driving_record');\n    loader.present();\n\n    this.drivingSvc.finishRecord({\n      applicationId: this.applicationId,\n      startLatitude: null,\n      driveStartTime: null,\n      startLongitude: null\n    }).toPromise().then(\n      () => {\n        let customer = new Customer();\n        customer.fullName = this.item.customerFullName;\n        // customer id is not correctly an application id. They are different, will fix this later\n        customer.id = this.applicationId\n        this.navCtrl.setRoot(\"SurveyDetailPage\", { customer: customer }).then(\n          _ => loader.dismiss()\n        );\n        this.navCtrl.popToRoot();\n      },\n      err => {\n        console.error('[finishDrivingRecord] error happens..', err);\n        const msg = err.message || 'msg.failed_to_finish_record';\n        this.toastSvr.error(msg);\n        loader.dismiss();\n      }\n    )\n  }\n\n  getDrivingRecords() {\n    this.loading.present();\n\n    this.drivingRecord = this.testDriveProvider.getDrivingRecords({ applicationId: this.applicationId })\n    this.drivingRecord.subscribe((res) => {\n\n      if (res.code === APICode.Success) {\n        console.log(\"getDriving record!: \", res.data)\n\n\n        for (let item of res.data) {\n          this.previousRecordItems.push({\n            drivenStartTime: /* this.util.koreanDateFormat(item.driveStartTime)*/ moment(item.driveStartTime).format(\"LLL\"),\n            drivenDurationInSec: moment(parseInt(item.drivenDurationInSec) * 1000).utc().format(\"HH:mm:ss\"),\n            drivenMileage: item.drivenMileage,\n            endFullAddress: item.endFullAddress,\n            startFullAddress: item.startFullAddress,\n            endLatitude: item.endLatitude,\n            endLongitude: item.endLongitude,\n            recordId: item.id\n          })\n          console.log(\"this.previousRecordItems: \", this.previousRecordItems)\n\n          this.totalDrivingTime += item.drivenDurationInSec\n          this.totalDrivenMileage += item.drivenMileage\n\n          console.log(\"Record this: \", this)\n        }\n        this.displayTotalDrivenMileage = parseFloat(this.totalDrivenMileage.toFixed(1))\n        this.displayTotalDrivingTime = moment(parseInt(this.totalDrivingTime) * 1000).utc().format(\"HH:mm:ss\")\n\n\n        return this.loading.dismiss()\n        /* {\n          items: [{\n            id: 1,\n            startLatitude: 43.54645645,\n            endLatitude: 43.54645645,\n            startLongitude: 54.334454,\n            endLongitude: 54.334454,\n            startFullAddress: \"\",\n            endFullAddress: \"\",\n            drivenMileage: 10.20,\n            drivenDurationInSec: 4234,\n            drivingRecordStatusEnum: \"Done\"\n          }]\n        }*/\n      } else {\n        //TODO 기존 기록이 없어서 받아올 값이 없으므로. 초기 상태로 시작하기 위해 초기값으로 세팅.\n      }\n    },\n      err => {\n        console.error('[getDrivingRecords]..', err);\n        this.loading.dismiss();\n      }\n    )\n\n  }\n\n  private generateUniqueFileName(): string {\n    return new Date().getTime().toString() + this.fileSvc.FILE_EXTENSION;\n  }\n\n  // getAddress() {\n  //   let getAddress = this.testDriveProvider.getFormattedAddress(this.latlng)\n\n  //   getAddress.subscribe((res: any) => {\n  //     if (res.code === APICode.Success) {\n  //       this.startAddress = res.data\n  //       console.log(\"this.statAddress: \", this.startAddress)\n  //       return this.uploadContinueDrivingRecord()\n  //     } else {\n  //       console.log(res);\n  //       return alert(\"error!\")\n  //     }\n  //   })\n  // }\n\n  // disposableGeolocation() {\n  //   // this.loading.present()\n\n  //   const getCurrentGeo = this.geolocation.getCurrentPosition()\n  //   getCurrentGeo.then((data) => {\n\n  //     this.latlng = {\n  //       latitude: data.coords.latitude,\n  //       longitude: data.coords.longitude,\n  //       language: null\n  //     }\n  //     if (this.latlng)\n  //       console.log(\"Result Page. getCurrentPosition. latlng값 있음. \")\n  //     return this.getAddress()\n\n  //   }, err => {\n  //     console.error(\"Network Error!\", err)\n  //     // console.error('ERROR', err.error.message);\n  //   })\n\n  //   // return getCurrentGeo\n\n  // }\n\n  // requestGeolocation() { //위경도 변화 없을때 가져오는용도.\n\n\n  //   const geolc = this.geolocation.watchPosition({ timeout: 100 });\n\n  //   geolc.subscribe((data) => {\n\n  //     if (data) {\n\n  //       console.log('gps 정보 정상적으로 받아옴 (gps 퍼미션 체크 완료)')\n  //     } else {\n  //       this.toastSvr.success('msg.please_check_gps_permission');\n  //       // this.navCtrl.goToRoot(null)\n  //     }\n\n  //   }, (e) => {\n  //     this.toastSvr.success(this.availableGpsString + ': ' + JSON.stringify(e));\n  //     // this.navCtrl.goToRoot(null)\n  //   })\n\n\n  // }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/test-drive-result/test-drive-result.ts"],"sourceRoot":""}