{"version":3,"sources":["../../src/pages/geolocation/geo.module.ts","../../src/pages/geolocation/geo.ts"],"names":[],"mappings":"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","file":"23.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { GeoPage } from './geo';\n\n@NgModule({\n  declarations: [\n    GeoPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(GeoPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    GeoPage\n  ]\n})\nexport class SearchPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/geolocation/geo.module.ts","import {Component} from '@angular/core';\nimport {IonicPage, NavController, NavParams, Platform} from 'ionic-angular';\n\nimport {Device} from '@ionic-native/device';\nimport {Geolocation} from \"@ionic-native/geolocation\";\n\nimport {Item} from '../../models/item';\nimport {Items} from '../../providers';\n\nimport * as moment from 'moment';\nimport {File} from \"@ionic-native/file\";\nimport { EmailComposer } from \"@ionic-native/email-composer\";\n\n\n@IonicPage()\n@Component({\n  selector: 'page-search',\n  templateUrl: 'geo.html'\n})\nexport class GeoPage {\n\n  myDate: any;\n  currentItems: any = [];\n  geoItems: Array<{\n    requestTime: any, responseTime: any, isreallocation: any, geoLat: any, geoLng: any, accuracy: any, heading: any,\n    speed: any, error: any, errorTime: any\n  }>;\n\n  errorItems: Array<{errorMessage:any, errorTime:any}>\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public items: Items,\n              private device: Device,\n              private geolocation: Geolocation,\n              private platform: Platform,\n              private file: File,\n              private mail: EmailComposer,\n  ) {\n\n    this.errorItems = [];\n    this.geoItems = [];\n    this.platform.ready().then(() => {\n\n      this.watchGeolocation()\n    })\n\n\n  }\n\n  /**\n   * Perform a service for the proper items.\n   */\n  getItems(ev) {\n    let val = ev.target.value;\n    if (!val || !val.trim()) {\n      this.currentItems = [];\n      return;\n    }\n    this.currentItems = this.items.query({\n      name: val\n    });\n  }\n\n  /**\n   * Navigate to the detail page for this item.\n   */\n  openItem(item: Item) {\n    this.navCtrl.push('ItemDetailPage', {\n      item: item\n    });\n  }\n\n  watchGeolocation() {\n    let lat\n    let lng\n    let accuracy, heading, speed\n\n    /*  if (this.device.platform == 'iOS'){\n       setInterval(() => {\n\n         let time2 = moment().format('YYYY-MM-DD hh:mm:ss') //요청시\n\n         this.geolocation.getCurrentPosition().then((res) => {\n\n           this.geoItems.push({\n             requestTime: time2,\n             responseTime: moment().format('YYYY-MM-DD hh:mm:ss'),\n             isreallocation: \"\",\n             geoLat: (res.coords.latitude).toFixed(8),\n             geoLng: (res.coords.longitude).toFixed(8),\n             accuracy: res.coords.accuracy,\n             heading: res.coords.heading,\n             speed: res.coords.speed,\n             error: \"없음\", errorTime: \"없음\"\n           })\n\n\n           lat = (res.coords.latitude).toFixed(8);\n           lng = (res.coords.longitude).toFixed(8);\n           // alert(lat)\n\n         }, (e) => {\n           // alert(\"겟커런트포지션 에러\" + e)\n\n           this.geoItems.push({\n             requestTime: time2,\n             responseTime: moment().format('YYYY-MM-DD hh:mm:ss'),\n             isreallocation: \"\",\n             geoLat: \"\",\n             geoLng: \"\",\n             accuracy: \"\",\n             heading: \"\",\n             speed: \"\",\n             error: e,\n             errorTime: moment().format('YYYY-MM-DD hh:mm:ss')\n           })\n\n\n         })\n       }, 2000)\n\n     }*/\n    // else if (this.device.platform == 'Android') {\n\n      let time2 = moment().format('YYYY-MM-DD hh:mm:ss');\n\n      const subscription = this.geolocation.watchPosition({timeout: 500000, enableHighAccuracy: true});\n      subscription.subscribe((data) => {\n\n        try {\n\n          this.geoItems.push({\n            requestTime: time2,\n            responseTime: moment().format('YYYY-MM-DD hh:mm:ss'),\n            isreallocation: \"\",\n            geoLat: (data.coords.latitude).toFixed(5),\n            geoLng: (data.coords.longitude).toFixed(5),\n            accuracy: data.coords.accuracy,\n            heading: data.coords.heading,\n            speed: data.coords.speed,\n            errorTime:\"없음\", error:\"없음\"\n          })\n\n          lat = (data.coords.latitude).toFixed(5);\n          lng = (data.coords.longitude).toFixed(5);\n          accuracy = data.coords.accuracy\n          heading = data.coords.heading\n          speed = data.coords.speed\n        }\n        catch (e) {\n          console.log(\"geoLat catch\" + e)\n        }\n\n      }, (e) => {\n        //요청시간 + 메시지\n        this.geoItems.push({\n          requestTime: time2,\n          responseTime: moment().format('YYYY-MM-DD hh:mm:ss'),\n          isreallocation: \"\",\n          geoLat: \"\",\n          geoLng: \"\",\n          accuracy: \"\",\n          heading: \"\",\n          speed: \"\",\n          error: e,\n          errorTime: moment().format('YYYY-MM-DD hh:mm:ss')\n        })\n\n\n      })\n      /*\n            setInterval(() => {\n\n\n              this.geolocation.getCurrentPosition().then((res) => {\n\n                lat = (res.coords.latitude).toFixed(8);\n                lng = (res.coords.longitude).toFixed(8);\n                // alert(lat)\n\n              }, (e) => {\n                alert(\"겟커런트포지션 에러\" + e)\n\n              })\n            }, 2000)\n\n          }*/\n      /*\n            let _repeat = () => {\n              return (\n                setInterval(() => {\n                  this.geoItems.push({\n                    responseTime: moment().format('YYYY-MM-DD hh:mm:ss'),\n                    isreallocation: \"fake\",\n                    geoLat: lat,\n                    geoLng: lng,\n                    accuracy: accuracy,\n                    heading: heading,\n                    speed: speed\n                  })\n                }, 1000)\n\n\n              )\n            }\n\n            let rp = _repeat()\n            setTimeout(() => {\n              clearInterval(rp);\n            }, 500000)*/\n    // }\n   /* else {\n      alert(\"other OS\")\n\n    }*/\n  }\n\n  sendMail() {\n\n\n\n    this.mail.isAvailable().then((available: boolean)=>{\n      if(available){\n\n      }\n    });\n\n    let email = {\n      to: 'ws@inventis.kr',\n      subject: moment().format('YYYY-MM-DD hh:mm:ss') + '_GPS테스트_' + this.device.platform,\n      body:JSON.stringify(this.geoItems),\n      isHtml: true\n    };\n\n    this.mail.open(email)\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/geolocation/geo.ts"],"sourceRoot":""}